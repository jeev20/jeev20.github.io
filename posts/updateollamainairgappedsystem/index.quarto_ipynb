{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: Updating Ollama in an airgapped linux server\n",
        "description: \"A walkthrough\"\n",
        "format: html\n",
        "toc: true\n",
        "lang: en\n",
        "jupyter: python3\n",
        "ipynb-shell-interactivity: all\n",
        "execute:\n",
        "  echo: false\n",
        "date: 2025-02-17 15:01 +0100\n",
        "categories: [\"llm\"]\n",
        "tags: [\"ollama\", \"airgapped\"]\n",
        "comments:\n",
        "  giscus:\n",
        "    repo: jeev20/jeev20.github.io\n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "> Case: Updating Ollama installation in a local server without internet access \n",
        "\n",
        "\n",
        "\n",
        "**TL;DR** \n",
        "```{.bash}\n",
        "sudo rm -rf /usr/lib/ollama \n",
        "curl -L https://ollama.com/download/ollama-linux-amd64.tgz -o ollama-linux-amd64.tgz\n",
        "sudo tar -C /usr -xzf ollama-linux-amd64.tgz \n",
        "ollama serve\n",
        "ollama -v\n",
        "```\n",
        "\n",
        "\n",
        "\n",
        "At work this week I had to update an Ollama instance in a airgapped linux server. The machine only had local ssh access. Thankfully ollama docs explained this scenario well. \n",
        "\n",
        "## Step 1 - Remove previous install\n",
        "`sudo rm -rf /usr/lib/ollama` --> removes the previous Ollama installation. This can also remove the downloaded models unless you do the following.\n",
        "\n",
        "Previously, to make our downloaded models independent of the Ollama version, I set an environment variable `OLLAMA_MODELS` such that Ollama can get static models from a shared drive. This made sure that when we do have to update Ollama, we do not need to purge already downloaded models. \n",
        "By default the downloaded models are saved at \n",
        "\n",
        "```{.plaintext}\n",
        "macOS: ~/.ollama/models\n",
        "Linux: /usr/share/ollama/.ollama/models\n",
        "Windows: C:\\Users\\%username%\\.ollama\\models\n",
        "```\n",
        "\n",
        "\n",
        "\n",
        "The following command would set OLLAMA_MODELS to the users home folder `/home/$user/OllamaModels`\n",
        "\n",
        "```{.bash}\n",
        "export OLLAMA_MODELS=\"/home/$user/OllamaModels\"\n",
        "```\n",
        "\n",
        "Another way to set `OLLAMA_MODELS` path is to edit the `/etc/systemd/system/ollama.service` file as show in this [walkthrough](https://github.com/ollama/ollama/blob/main/docs/linux.md)\n",
        "\n",
        "## Step 2 - Download the specific version \n",
        "\n",
        "`curl -L https://ollama.com/download/ollama-linux-amd64.tgz -o ollama-linux-amd64.tgz`command downloads the latest version of Ollama to the current folder.\n",
        "One can also download the same via the github releases page: [Ollama Releases](https://github.com/ollama/ollama/releases)\n",
        "\n",
        "\n",
        "## Step 3 - Extract contents and copy \n",
        "`sudo tar -C /usr -xzf ollama-linux-amd64.tgz` command extracts the contents and copies it to `/usr` folder. \n",
        "\n",
        "## Step 4 - Check the installation\n",
        "`ollama serve` starts the ollama service if it is not already running\n",
        "`ollama -v` outputs the version of the new version. For example : `ollama version is 0.5.7`\n",
        "`ollama list` will then output all of your previously downloaded models.\n",
        "\n",
        "\n",
        "\n",
        "## References\n",
        "\n",
        "* [Ollama linux installing manually](https://github.com/ollama/ollama/blob/main/docs/linux.md)\n",
        "* [Ollama general FAQ](https://github.com/ollama/ollama/blob/main/docs/faq.md)\n"
      ],
      "id": "c8d659c5"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/home/wslap/Documents/jeev20.github.io/.venv/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}