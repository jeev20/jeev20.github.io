{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: Nerd miner setup\n",
        "description: \"Bitcoin mining on edge / IOT devices (ESP32)\"\n",
        "author: \"Jeevith Hegde\"\n",
        "format: html\n",
        "toc: true\n",
        "lang: en\n",
        "jupyter: python3\n",
        "ipynb-shell-interactivity: all\n",
        "execute:\n",
        "  echo: false\n",
        "date: 2024-06-12\n",
        "categories: [\"blockchain\"]\n",
        "tags: [\"mining\", \"bitcoin\", \"nerd miner\"]\n",
        "comments:\n",
        "  giscus:\n",
        "    repo: jeev20/jeev20.github.io\n",
        "---\n",
        "\n",
        "\n",
        "About two months ago, I found out about an open-source project called [NerdMiner](https://github.com/BitMaker-hub/NerdMiner_v2?tab=readme-ov-file) and the curiosity led me to try the project out myself. \n",
        "\n",
        "NerdMiner is a solo-miner software setup on very low specification hardware, such as ESP32 micro controllers. In this case it mines for bitcoin by pooling together large number of such boards. \n",
        "\n",
        "The cool part about this setup is that it sips power in comparison to the state-of-the-art bitcoin miners. The ESP32's I have probably use 160 mA per board, which is negligible in the grand scheme of things. \n",
        "\n",
        "That said, the chances of finding a block on a hardware this weak is next to 0! Therefore, some call it a bitcoin lottery. \n",
        "\n",
        "The hardware setup is quite simple as shown below. A cluster of 4 ESP32 Wroom boards connected to a powered USB hub. \n",
        "\n",
        "The software is quite easy to flash onto the ESP32. The [post](https://bitcointalk.org/index.php?topic=5466940.0) and [website](https://flasher.bitronics.store/) goes over the flashing process. \n",
        "\n",
        "\n",
        "```{mermaid}\n",
        "\n",
        "graph TD\n",
        "\n",
        "    subgraph ESP32_Cluster\n",
        "    direction TB\n",
        "        Esp1[<img src='https://no.mouser.com/images/espressifsystems/lrg/ESP32-DevKitC-32E_SPL.jpg' width='40' height='150'/>] \n",
        "\n",
        "        Esp2[<img src='https://no.mouser.com/images/espressifsystems/lrg/ESP32-DevKitC-32E_SPL.jpg' width='40' height='150'/>]\n",
        "\n",
        "\n",
        "        Esp3[<img src='https://no.mouser.com/images/espressifsystems/lrg/ESP32-DevKitC-32E_SPL.jpg' width='40' height='150'/>] \n",
        "\n",
        "        Esp4[<img src='https://no.mouser.com/images/espressifsystems/lrg/ESP32-DevKitC-32E_SPL.jpg' width='40' height='150'/>] \n",
        "\n",
        "\n",
        "    end \n",
        "\n",
        "\n",
        "\n",
        "    Powered_USB_Hub\n",
        "\n",
        " \n",
        "ESP32_Cluster-->Powered_USB_Hub\n",
        "\n",
        "\n",
        "```\n",
        "\n",
        "Quite happy with how it runs. \n",
        "\n",
        "![OutputVSCodeExtension](images/ESP32Cluster.png)"
      ],
      "id": "c6ba87ee"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/home/wslap/Documents/jeev20.github.io/.venv/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}